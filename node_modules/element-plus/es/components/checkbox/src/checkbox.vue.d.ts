import type { PropType } from 'vue';
import type { ComponentSize } from '@element-plus/utils/types';
declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: (StringConstructor | BooleanConstructor | NumberConstructor)[];
        default: () => undefined;
    };
    label: {
        type: (ObjectConstructor | StringConstructor | BooleanConstructor | NumberConstructor)[];
    };
    indeterminate: BooleanConstructor;
    disabled: BooleanConstructor;
    checked: BooleanConstructor;
    name: {
        type: StringConstructor;
        default: undefined;
    };
    trueLabel: {
        type: (StringConstructor | NumberConstructor)[];
        default: undefined;
    };
    falseLabel: {
        type: (StringConstructor | NumberConstructor)[];
        default: undefined;
    };
    id: {
        type: StringConstructor;
        default: undefined;
    };
    controls: {
        type: StringConstructor;
        default: undefined;
    };
    border: BooleanConstructor;
    size: {
        type: PropType<ComponentSize>;
        validator: (val: string) => boolean;
    };
    tabindex: (StringConstructor | NumberConstructor)[];
}, {
    isChecked: import("vue").ComputedRef<boolean>;
    isDisabled: import("vue").ComputedRef<boolean | undefined>;
    checkboxSize: import("vue").ComputedRef<ComponentSize>;
    model: import("vue").WritableComputedRef<any>;
    handleChange: (e: InputEvent) => void;
    focus: import("vue").Ref<boolean>;
    size: import("vue").ComputedRef<ComponentSize>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "update:modelValue")[], "change" | "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    label?: unknown;
    indeterminate?: unknown;
    disabled?: unknown;
    checked?: unknown;
    name?: unknown;
    trueLabel?: unknown;
    falseLabel?: unknown;
    id?: unknown;
    controls?: unknown;
    border?: unknown;
    size?: unknown;
    tabindex?: unknown;
} & {
    border: boolean;
    disabled: boolean;
    checked: boolean;
    indeterminate: boolean;
} & {
    id?: string | undefined;
    name?: string | undefined;
    label?: string | number | boolean | Record<string, any> | undefined;
    size?: ComponentSize | undefined;
    tabindex?: string | number | undefined;
    controls?: string | undefined;
    modelValue?: string | number | boolean | undefined;
    trueLabel?: string | number | undefined;
    falseLabel?: string | number | undefined;
}> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    id: string;
    name: string;
    border: boolean;
    disabled: boolean;
    checked: boolean;
    controls: string;
    modelValue: string | number | boolean;
    indeterminate: boolean;
    trueLabel: string | number;
    falseLabel: string | number;
}>;
export default _default;
